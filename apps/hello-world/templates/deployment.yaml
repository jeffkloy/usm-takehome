apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 10 }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds | default 600 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.strategy.maxSurge | default "25%" }}
      maxUnavailable: {{ .Values.strategy.maxUnavailable | default "25%" }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: http
        env:
        - name: PORT
          value: "{{ .Values.service.targetPort }}"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds | default 30 }}
          periodSeconds: {{ .Values.probes.liveness.periodSeconds | default 10 }}
          timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds | default 5 }}
          successThreshold: {{ .Values.probes.liveness.successThreshold | default 1 }}
          failureThreshold: {{ .Values.probes.liveness.failureThreshold | default 3 }}
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds | default 10 }}
          periodSeconds: {{ .Values.probes.readiness.periodSeconds | default 5 }}
          timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds | default 3 }}
          successThreshold: {{ .Values.probes.readiness.successThreshold | default 1 }}
          failureThreshold: {{ .Values.probes.readiness.failureThreshold | default 3 }}
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds | default 0 }}
          periodSeconds: {{ .Values.probes.startup.periodSeconds | default 10 }}
          timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds | default 3 }}
          successThreshold: {{ .Values.probes.startup.successThreshold | default 1 }}
          failureThreshold: {{ .Values.probes.startup.failureThreshold | default 30 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
